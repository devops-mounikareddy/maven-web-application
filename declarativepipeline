pipeline {
    agent{
    label('nodes')
    }
    tools{
        maven "maven3.8.5"
    }
    options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '')
  timestamps()
}
/*
triggers {
  pollSCM '* * * * *'
}

parameters {
  choice choices: ['development', 'qa', 'test', 'uat'], description: 'choose branch name', name: 'BranchName'
  string defaultValue: 'mounika', description: 'select person name', name: 'PersonName'
}
*/
   stages{
        
        stage('checkpoutcode'){
            steps{
             git branch: 'development', credentialsId: '16ae0d27-b3ed-41eb-b140-860639b79be7', url: 'https://github.com/devops-mounikareddy/maven-web-application.git'
}
}
stage('build'){
    steps{
        sh "mvn clean package"
    }
}
    stage('ceatesonarqube repory'){
        steps{
            sh "mvn sonar:sonar"
            
        }
        
    }
    stage('uploadartifactintonexus'){
        steps{
        sh "mvn deploy"
        }
    }
    stage('deployintotomcat'){
        steps{
            sshagent(['76b50b5c-e183-4ebe-a08c-649fa93660a8']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.3.196:/opt/apache-tomcat-9.0.64/webapps"
}   
        }
    }

    }//stages closing            
    post {
  success {
    notifyBuild('SUCESSFUL')
  }
  failure {
    notifyBuild('FAILURE')
  }
}

    }//pipeline closing        
    def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
  }
