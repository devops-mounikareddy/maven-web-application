node {
def mavenHome = tool name: "maven3.8.5"


try {
notifyBuild('STARTED')
stage('checkoutcode'){
    git branch: 'development', credentialsId: '16ae0d27-b3ed-41eb-b140-860639b79be7', url: 'https://github.com/devops-mounikareddy/maven-web-application.git'
}
stage('build'){
sh "${mavenHome}/bin/mvn clean package"

}
/*
stage('createsonarqubereport'){
   sh "${mavenHome}/bin/mvn sonar:sonar"
   
}
stage('uploadartifactintoNexus'){
   sh "${mavenHome}/bin/mvn deploy"
}
stage('deployAppIntoTomcat'){
 sshagent(['76b50b5c-e183-4ebe-a08c-649fa93660a8']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.3.196:/opt/apache-tomcat-9.0.64/webapps"
}   

}
*/
}catch (e) {
currentBuild.result = "FAILED"
 throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}//node closing
//send slack notification
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
